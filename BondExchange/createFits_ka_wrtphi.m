function [fitresult, gof] = createFits_ka_wrtphi(x_temp, y, nk, mt)
%CREATEFITS(X_TEMP,Y)
%  Create fits.
%
%  Data for 'bs12' fit:
%      X Input : x_temp
%      Y Output: y
%  Data for 'ms12' fit:
%      X Input : x_temp
%      Y Output: y
%  Data for 'bs18' fit:
%      X Input : x_temp
%      Y Output: y
%  Data for 'ms18' fit:
%      X Input : x_temp
%      Y Output: y
%  Data for 'bs36' fit:
%      X Input : x_temp
%      Y Output: y
%  Data for 'ms36' fit:
%      X Input : x_temp
%      Y Output: y
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 28-Mar-2024 16:59:32

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 1, 1 );
gof = struct( 'sse', cell( 1, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

if nk==12 && mt==0
    %% Fit: 'bs12'.
    [xData, yData] = prepareCurveData( x_temp, y );
    
    % Set up fittype and options.
    ft = fittype( 'k*(c*x^(1/3)-1)', 'independent', 'x', 'dependent', 'y' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
    opts.Display = 'Off';
    opts.StartPoint = [0.627486914583239 0.0604711791698936];
    
    % Fit model to data.
    [fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );
%     
%     % Plot fit with data.
%     figure( 'Name', 'bs12' );
%     h = plot( fitresult{1}, xData, yData );
%     legend( h, 'y vs. x_temp', 'bs12', 'Location', 'NorthEast', 'Interpreter', 'none' );
%     % Label axes
%     xlabel( 'x_temp', 'Interpreter', 'none' );
%     ylabel( 'y', 'Interpreter', 'none' );
%     grid on
    
elseif nk==12 && mt==1
    %% Fit: 'ms12'.
    [xData, yData] = prepareCurveData( x_temp, y );
    
    % Set up fittype and options.
    ft = fittype( 'k*(c*x^(1/3)-1)', 'independent', 'x', 'dependent', 'y' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
    opts.Display = 'Off';
    opts.StartPoint = [0.140814491565318 0.80336439160244];
    
    % Fit model to data.
    [fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );
    
    % % Plot fit with data.
    % figure( 'Name', 'ms12' );
    % h = plot( fitresult{1}, xData, yData );
    % legend( h, 'y vs. x_temp', 'ms12', 'Location', 'NorthEast', 'Interpreter', 'none' );
    % % Label axes
    % xlabel( 'x_temp', 'Interpreter', 'none' );
    % ylabel( 'y', 'Interpreter', 'none' );
    % grid on
    
elseif nk==18 && mt==0
    %% Fit: 'bs18'.
    [xData, yData] = prepareCurveData( x_temp, y );
    
    % Set up fittype and options.
    ft = fittype( 'k*(c*x^(1/3)-1)', 'independent', 'x', 'dependent', 'y' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
    opts.Display = 'Off';
    opts.StartPoint = [0.172775459067897 0.83137974283907];
    
    % Fit model to data.
    [fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );
    
    % % Plot fit with data.
    % figure( 'Name', 'bs18' );
    % h = plot( fitresult{1}, xData, yData );
    % legend( h, 'y vs. x_temp', 'bs18', 'Location', 'NorthEast', 'Interpreter', 'none' );
    % % Label axes
    % xlabel( 'x_temp', 'Interpreter', 'none' );
    % ylabel( 'y', 'Interpreter', 'none' );
    % grid on
    
elseif nk==18 && mt==1
    %% Fit: 'ms18'.
    [xData, yData] = prepareCurveData( x_temp, y );
    
    % Set up fittype and options.
    ft = fittype( 'k*(c*x^(1/3)-1)', 'independent', 'x', 'dependent', 'y' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
    opts.Display = 'Off';
    opts.StartPoint = [0.871748777531479 0.390937802323736];
    
    % Fit model to data.
    [fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );
    
    % % Plot fit with data.
    % figure( 'Name', 'ms18' );
    % h = plot( fitresult{1}, xData, yData );
    % legend( h, 'y vs. x_temp', 'ms18', 'Location', 'NorthEast', 'Interpreter', 'none' );
    % % Label axes
    % xlabel( 'x_temp', 'Interpreter', 'none' );
    % ylabel( 'y', 'Interpreter', 'none' );
    % grid on
    
elseif nk==36 && mt==0
    %% Fit: 'bs36'.
    [xData, yData] = prepareCurveData( x_temp, y );
    
    % Set up fittype and options.
    ft = fittype( 'k*(c*x^(1/3)-1)', 'independent', 'x', 'dependent', 'y' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
    opts.Display = 'Off';
    opts.StartPoint = [0.783022659526229 0.173388613119006];
    
    % Fit model to data.
    [fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );
    
    % % Plot fit with data.
    % figure( 'Name', 'bs36' );
    % h = plot( fitresult{1}, xData, yData );
    % legend( h, 'y vs. x_temp', 'bs36', 'Location', 'NorthEast', 'Interpreter', 'none' );
    % % Label axes
    % xlabel( 'x_temp', 'Interpreter', 'none' );
    % ylabel( 'y', 'Interpreter', 'none' );
    % grid on
    
elseif nk==36 && mt==1
    %% Fit: 'ms36'.
    [xData, yData] = prepareCurveData( x_temp, y );
    
    % Set up fittype and options.
    ft = fittype( 'k*(c*x^(1/3)-1)', 'independent', 'x', 'dependent', 'y' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
    opts.Display = 'Off';
    opts.StartPoint = [0.875506734033785 0.133171007607162];
    
    % Fit model to data.
    [fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );
    
    % % Plot fit with data.
    % figure( 'Name', 'ms36' );
    % h = plot( fitresult{1}, xData, yData );
    % legend( h, 'y vs. x_temp', 'ms36', 'Location', 'NorthEast', 'Interpreter', 'none' );
    % % Label axes
    % xlabel( 'x_temp', 'Interpreter', 'none' );
    % ylabel( 'y', 'Interpreter', 'none' );
    % grid on
end

