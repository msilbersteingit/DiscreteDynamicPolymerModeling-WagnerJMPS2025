%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 Author: 	Robert J. Wagner
 Date: 		June 12th, 2024
 Description: README for the single-chain bond kinetics sampling frequency validation study of Appendix C in "A foundational framework for the mesoscale modeling of dynamic elastomers and gels".
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% CONTENTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 This directory contains the following src code written in MATLAB2022a:
	1. ParallelRunScript.m
		Purpose: MAIN code in which run parameters are prescribed, controls are set, and both models are looped over. With directories properly set and software properly installed, user can:
			A. Generate the necessary input files needed by LAMMPS (executed by GenerateTopology.m)
			B. Run LAMMPS using the system(command) prompt (executed by RunSimulations.m)
			C. Compile the .dump files generated by LAMMPS and save them into compressed MATLAB stuctures (executed by CompileData.m)
			D. Post-process the data and generate the output plots for the manuscript
	2. GenerateTopology.m
		Purpose: Generates the initial configuration of each simulation and then prints the input files (.in) called out by LAMMPS. These .in files also call out toplogy files (.txt) using the readdata command in LAMMPS. These topology files are also generated and saved by GenerateTopology.m.
	3. InputScript.m 
		Purpose: Defines the phenomenological parameters needed to initiate stable initial topologies for input into LAMMPS. Used for initiation purposes only and should not be modified by USER 
	4. RunSimulation.m
		Purpose: Identifies the appropriate .in files for LAMMPS, and then executes LAMMPS call using the system(command) prompt in MATLAB. Also saves and relocates .dump files to specified output directory. 
	5. CompileData.m 
		Purpose: Intakes .dump files directly output from LAMMPS, parses the data, and then compiles it into a useable format for PostProcess.m, as compressed MATLAB stuctures (.mat). Also computes pertinent outputs such as chain end-to-end vectors, forces, etc.
	6. PostProcessData.m 
		Purpose: Intakes the compiled .mat structures generated by CompileData.m, analyzes the data, and outputs plots for the manuscript into a directory titled 'Output Plots'.
	7. SetDirAndFileNames.m
		Purpose: Sets all input and output folders needed for the other scripts.
	8. DefineCompiledFileNames.m
		
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% RUN INSTRUCTIONS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 The following gives step-by-step instructions for running the code. We do not recommend modifying any inputs unless these instructions explicitly indicate to do so.

 1. Open ParallelRunScript.m
 2. Set the work flow controls to 0 (off) or 1 (on), as necessary, on lines 16-19.
	A. <GenerateTopologes> to generate all necessary input files for LAMMPS using GenerateTopology.m
	B. <RunLAMMPS> to carry out LAMMPS simulations using RunSimulations.m 
	C. <CompileEnsembleData> to compile .dump files and compute pertinent outputs using CompileData.m 
	D. <PostProcess> to post-process the .mat data generated by CompileData.m and output the manuscript plots into the directory </Output Plots> using PostProcess.m
 3. The code will automatically skip lengthy steps that have already be executed such as initial file generation (i.e., GenerateTopolog.m), LAMMPS simulations (i.e., RunSimulations.m), etc. To manually override this skipping procedure on a process-specific basis, set the following work flow overrides to 0 (don't repeat step if it has alreay occured) or 1 (override old data and repeat the step), as desired:
	A. <OverrideTopologies> to overwrite input files
	B. <OverrideInputScripts> to specifically overwrite the .in files for LAMMPS without regenerating initial chain/network topologies
	C. <OverrideRun> to overwrite LAMMPS .dump files by reruning the LAMMPS simulations
	D. <OverrideCompile> to overwrite the compiled .mat strutures generated by parsing the raw .dump files from LAMMPS using CompileData.m 
	E. <OverrideCompute> to overwrite the computed values from CompileData.m without also re-parsing and regenerating the compressed .mat files from CompileData.m
 	F. <OverridePostProces> to overwrite the output plots
 4. Decide which outputs to compute by toggling the switches on lines 30-35 to 0 (don't compute) or 1 (compute)
 5. Set <NoProcessors> to the number of processors desired for parallel generation of simulation input files. Should be set in the range [1,N], where 1 is the number of local cores. Set 1 unless the parallel computing toolbox has been installed for MATLAB
 6. Set <CurrentFolder> to the current directory in which this src code is stored. This should be done automatically. Input files will be stored in this current directory, as will output plots. 
 7. Specify hard drive (e.g., 'M') to which data will be output. It is recommended that a dedicated SSD with up to 2 to 4 TB of space be utilized for data storage, as the bead-spring model generates large data sets for network-scale models. Output data from LAMMPS and the compressed .mat files from CompileData.m will be stored in this drive on an identical, analagous path to pwd of the src code on the local drive.
 8. Set the path to LAMMPS executable (e.g., 'lmp', or 'lmp_mpi'). Make sure to use WSL compatible formatting in the directory syntax, (e.g., 'mnt/c/Users/...' instead of 'C:/Users/...'), if using WSL.
 9. Leave the remainder of the parameters under "Input Parameters" as is to replicate study of manuscript
 10. Run ParallelRunScript.m
 
Note: To use the raw data files generated for this manuscript, move the raw .dump files to the location of the 'OutputDir' and compiled .mat files to the location of 'CompiledFolderName' as defined in 'SetDirAndFileNames.m'. Make sure all files are unzipped. Data compilation via CompileData.m and post-processing via PostProcessData.m may be required.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% OUTPUTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 This src code will generate the raw plots used in Appendix F of the manuscript. Plots used in the main manuscript are stored in '/Output Plots/'.
	
